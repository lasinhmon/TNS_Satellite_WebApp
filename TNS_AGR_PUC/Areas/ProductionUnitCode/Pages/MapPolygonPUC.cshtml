@page
@model TNS_AGR.Areas.ProductionUnitCode.Pages.MapPolygonPUCModel
@{
}
<div style="width:100%; margin:-20px 0 0 -20px">
    <div style="padding:5px; font-weight:bold; font-size:13px">
        <a href="~/Index" style="text-decoration:none; color:#4c4c4c">Home</a>
        <span class="uil-angle-double-right"></span>
        <a href="#" style="text-decoration:none; color:#4c4c4c">Quản lý vùng trồng</a>
        <span class="uil-angle-double-right"></span>
        <span style="color:maroon">Theo cây trồng </span>
    </div>
</div>

<div class="row">
    <div class="col-9">

        <div class="row">
            <div class="col-11">
                <div class="card">
                    <canvas id="Chart_View" height="350"></canvas>
                </div>
            </div>
           
        </div>
        <div class="row">
            <div class="col-11">

                <div id="map" style="height:600px;"></div>

            </div>
        </div>
        <br />
        <div class="row">
            <table id="LV_Datatable" class="table table-striped table-bordered" style="border-collapse: collapse; border-spacing: 0; font-size:13px; ">
                <thead id="LV_DataHeader">
                  
                </thead>

                <tbody id="LV_DataBody">
                </tbody>

            </table>
            <div class="row ">
                <div class="col-9 text-center">
                    <div id="PageNumberView" class="btn-group me-2" role="group" aria-label="First group">
                    </div>
                </div>
                <div class="col-3 text-center">
                   
                </div>
            </div>
            <div id="LV_Waiting" style="display:none">
                <div class='text-center'>
                    <div class='spinner-border text-primary m-5' role='status'>
                        <span class='sr-only'>Loading...</span>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <div class="col-3" style="font-size:14px">
        <div class="row">
            <div class="input-group" style="padding-left:0; padding-right:0">
                <input id="txt_Search" type="text" class="form-control w-25" placeholder="Tìm kiếm mã số" aria-label="Tìm kiếm" aria-describedby="button-addon2">
                <button class="btn btn-primary" onclick="btn_Search_Click()">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </div>
        <div style="height:5px"></div>
        <div class="row align-items-center bg-success" style="font-weight:bold; color:white; padding:5px">
            THỐNG KÊ THEO
        </div>
        <div style="height:5px"></div>
        <div class="row align-items-center">
            <div class="col-4">Tỉnh</div>
            <div class="col-8">
                 <select id="Provinces" class="form-select w-100">
                    <option value="">Chọn tỉnh</option>
                    @foreach (string[] zItem in Model.DataOfProvinces)
                    {
                        <option value="@zItem[0]">@zItem[1]</option>
                    }
                </select>
            </div>
        </div>
        <div style="height:5px"></div>
        <div class="row align-items-center">
            <div class="col-4">Huyện</div>
            <div class="col-8">
                <select id="District" class="form-select w-100">
                </select>
            </div>
        </div>
        <div style="height:5px"></div>
        <div class="row align-items-center">
            <div class="col-4">Cây Trồng</div>
            <div class="col-8">
                <select id="Commodity" class="form-select w-100">
                  
                </select>
            </div>
        </div>
        <div style="height:5px"></div>
        <div style="height:5px"></div>
        <div style="height:15px"></div>
        <div class="row justify-content-center">
            <button id="btn_Search" class="btn btn-primary w-50" onclick="btn_Search_Click()">
                <i class="fas fa-search"></i>
            </button>
        </div>


        <div class="row align-items-center">
        </div>
    </div>
</div>
<div id="Modal_Area" class="modal-dialog  modal-dialog-right">
    <div class="modal fade" id="Modal_Popup_Form" tabindex="-1" aria-labelledby="Modal_Selected_Label" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="Modal_Popup_Title">Kiểm tra thông tin </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="Modal_Popup_Body" class="mb-3 row">
                        <div class="row" style="font-size:14px">
                            <div class="col-12">
                            <table id="LV_Client" class="table table-striped table-bordered" style="border-collapse: collapse; border-spacing: 0; width: 100%;">
                               
                                    <thead id="LV_Client_Head"></thead>
                                    <tbody id="LV_Client_DataBody"></tbody>
                             
                            </table>
                            </div>
                        </div>

                    </div>
                    <div id="Modal_Popup_Panel">
                        <button style="display:none" id="Modal_Update_btn_Save" type="submit" class="btn btn-primary" onclick="Modal_Update_Save()">Save</button>
                    </div>
                    <div id="Modal_Popup_Waiting" style="display:none">
                        <div class='text-center'>
                            <div class='spinner-border text-primary m-1' role='status'>
                                <span class='sr-only'>Loading...</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Required datatable js -->
<script src="~/libs/jquery/jquery.min.js"></script>
<script src="~/libs/bootstrap/js/bootstrap.min.js"></script>
<script src="~/libs/datatables/js/dataTables.min.js"></script>
<script src="~/libs/chart.js/chartjs.js"></script>
<script>
    (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })
        ({ key: "AI", v: "weekly" });</script>
<script>
    let map, marker;
    function Model_Map(polygon) {
        console.log(polygon);
        var mang=polygon.dataOfPUC;
     //   console.log(mang)
        var n = polygon.dataOfPUC.length;
        for (i = 0; i < n; i++) {
            var tamm = polygon.dataOfPUC[i][3].split(";");// từng mảng longlat
            var polygonCoordinates = [];
        //    console.log(polygon.dataOfPUC[i][6])
            var area = parseFloat(polygon.dataOfPUC[i][6] / tamm.length);
          //  console.log(area)
            // Tính độ dài cạnh của hình chữ nhật từ diện tích
            var rectangleRadius = Math.sqrt(area / Math.PI)*10;

            
            for(var j = 0; j < tamm.length; j++){
                var latLng = tamm[j].split(",");
                var lat = parseFloat(latLng[1]); 
                var lng = parseFloat(latLng[0]); 
                var point = { lat: lat, lng: lng };
                polygonCoordinates.push(point);
            }
            console.log(polygonCoordinates)
         //   for (var i = 0; i < polygonCoordinates.length; i++) {
                var center = polygonCoordinates[i];
                const bermudaTriangle = new google.maps.Polygon({
                    paths: polygonCoordinates,
                    strokeColor: "#FF0000", // Set the stroke color
                    strokeOpacity: 0.8, // Set the stroke opacity
                    strokeWeight: 2, // Set the stroke weight
                    fillColor: "#FF0000", // Set the fill color
                    fillOpacity: 0.35 // Set the fill opacity
                 });
                bermudaTriangle.setMap(map);
                
         //   }

            map.setCenter(polygonCoordinates[0]);
            map.setZoom(15);
            map.setMapTypeId('satellite');

          //  console.log(polygonCoordinates)
        }
    }
    async function initMap() {
        // The location of Uluru
        const position = { lat: -25.344, lng: 131.031 };
        // Request needed libraries.

        const { Map } = await google.maps.importLibrary("maps");
        const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");

        // The map, centered at Uluru
        map = new Map(document.getElementById("map"), {
            zoom: 4,
            center: position,
            mapId: "DEMO_MAP_ID",
        });

        // The marker, positioned at Uluru
        marker = new AdvancedMarkerElement({
            map: map,
            position: position,
            title: "Uluru",
        });
    }

    initMap();
</script>
<script>
    var _Data;
    var _PageSelected = "";
    var _PageSize;
    $(document).ready(function () {
        $('#Provinces option')[0].selected = true;
    });
    $("#Provinces").on("change", function () {
        var zProvince = $('#Provinces').find(":selected").val();
       // alert(zProvince)
        var zDataRequest = { "LocationID": zProvince };
        $.ajax({
            type: 'POST',
            url: "/ProductionUnitCode/MapPolygonPUC?handler=CollectData",
            data: JSON.stringify(zDataRequest),
            contentType: "application/json",
            dataType: "json",
        })
            .done(function (dataResponse) {
                DisplayDistrict(dataResponse)
            })
            .fail(function (error) {
                alert('Error : ' + error.responseText);
            });
    });
    function DisplayDistrict(dataview) {
        var zContent = "";

        var n = dataview.length;
        //  alert(n)
        if (n > 0) {
            //  for (string zItem in Model.DataOfProvinces) {
            //               <option value=""></option>
            //    }
            for (i = 0; i < n; i++) {
                zContent += "<option value=\"" + dataview[i][1] + "\">" + dataview[i][1] + "</option>";

            }
            $("#District").html(zContent);
        }
        $('#District option')[0].selected = true;
    }
    $("#District").on("change", function () {
        var zProvince = $('#Provinces').find(":selected").text();
       // alert(zDistrict)
        var zDataRequest = { "LocationID": zProvince };
        $.ajax({
            type: 'POST',
            url: "/ProductionUnitCode/MapPolygonPUC?handler=CollectCommodity",
            data: JSON.stringify(zDataRequest),
            contentType: "application/json",
            dataType: "json",
        })
            .done(function (dataResponse) {
             //   alert(dataResponse)
                DisplayCommodity(dataResponse)
            })
            .fail(function (error) {
                alert('Error : ' + error.responseText);
            });
    });
    var ListComm;
    var sumArray;
    function DisplayCommodity(dataview) {
        var zContent = "";
        var uniqueComm = new Set();
       // console.log(dataview)
        var n = dataview.length;
        if (n > 0) {
            zContent += "<option value=''>Chọn tất cả</option>";
            for (var i = 0; i < n; i++) {
                var value = dataview[i][0];
                uniqueComm.add(value); // Thêm giá trị vào Set, Set tự loại bỏ các giá trị trùng lặp
            }
          
            // Duyệt qua tất cả các giá trị duy nhất trong Set và tạo các tùy chọn cho dropdown
            uniqueComm.forEach(function (value) {
                zContent += "<option value=\"" + value + "\">" + value + "</option>";
            });

            $("#Commodity").html(zContent);
        }
        var sumMap = {};

        // Duyệt qua mỗi phần tử trong dataview
        for (var i = 0; i < n; i++) {
            var key = dataview[i][0]; // Lấy giá trị dataview[i][0] làm khóa

            var value = parseInt(dataview[i][2]);
        // Kiểm tra xem tổng có được tính cho khóa này chưa
            if (sumMap[key] === undefined) {
        // Nếu chưa, khởi tạo tổng bằng giá trị dataview[i][2]
                sumMap[key] = value;
            } else {
        // Nếu đã có tổng cho khóa này, thêm giá trị dataview[i][2] vào tổng
                sumMap[key] += value;
            }
        }
        sumArray = Object.values(sumMap);

        // Hiển thị kết quả
        //console.log(sumMap);
        ListComm=uniqueComm;
     //   alert(uniqueComm)
     //   alert(ListComm)
     

        $('#Commodity option')[0].selected = true;
       
        Chart_Display();
    }
    function btn_Search_Click() {
        _PageSelected = "";
        LV_LoadData_Ajax();
    }
  

    function LV_LoadData_Ajax() {

        $("#LV_Waiting").css("display", "");
        $("#LV_DataBody").html("");
        $("#PageNumberView").html("");

        var zSearchContent = $("#txt_Search").val();
        var zProvinces = $('#Provinces').find(":selected").text();
        var zDistrict = $('#District').find(":selected").val();
       // var zCountry = $('#Country').find(":selected").val();
        var zCommodity = $('#Commodity').find(":selected").val();

       // var zStatusView = $('#StatusView').find(":selected").val();
        var test = "LocationName = '" + zProvinces + "' AND District = '" + zDistrict+"' "
       // alert(test)
        var zDataRequest = { "searchContent": zSearchContent, "LocationID": test, "commodity": zCommodity};

        $.ajax({
            type: 'POST',
            url: "/ProductionUnitCode/MapPolygonPUC?handler=LoadData",
            data: JSON.stringify(zDataRequest),
            contentType: "application/json",
            dataType: "json",
        })
            .done(function (dataResponse) {
                $("#txt_MessageLog").html(JSON.stringify(dataResponse));
                _Data = dataResponse;
                alert(_Data)
               // LV_DisplayData(dataResponse);
                Model_Map(dataResponse);
                $("#LV_Waiting").css("display", "none");
            })
            .fail(function (error) {
                alert('Error : ' + error.responseText);
            });
    }
    
   
    var _Dataview_Detail;
   
</script>

<script>
   // var xValues = ["Thanh Long", "Xoài", "Lúa", "Mãng cầu", "Sầu riêng"];
  //  var yValues = [55, 49, 90, 24, 60];
    var barColors = ["red", "green", "blue", "orange", "brown","yellow","pink","black","grey","purple"];

   
    function Chart_Display(){

        var Chart_View=new Chart("Chart_View", {
        type: "bar",
        data: {
            labels: Array.from(ListComm),
            datasets: [{
                backgroundColor: barColors,
                data: sumArray
            }]
        },
        options: {
            plugins: {
                legend: {
                    display: false
                }
            }
        }
        });
       // Chart_View.data.labels=Array.from(ListComm);
        
        Chart_View.update();
    }
</script>
